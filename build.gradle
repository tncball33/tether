/*
 * Copyright 2017-2018 Fjord
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "com.github.ben-manes.versions"

buildscript {
    ext {
        tools_version = '3.3.0'
        kotlin_version = '1.3.20'
        nexus_plugin_version = '2.3.1'
        maven_plugin_version = '2.1'
        dependency_update_version = '0.20.0'

        version_name = VERSION_NAME
        version_code = VERSION_CODE.toInteger()

        compile_version = 28
        target_version = 28
        min_version = 21
        arch_version = '2.0.0-rc01'
        material_version = '1.1.0-alpha03'
        appcompat_version = '1.0.0-rc02'

        //tether specific
        rx_kotlin_version = '2.3.0'
        rx_java2_version = '2.1.0'
        rx_binding_version = "2.1.1"

        // sample specific
        constraint_version = '1.1.3'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$tools_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath "com.bmuschko:gradle-nexus-plugin:$nexus_plugin_version"
        classpath "com.github.dcendents:android-maven-gradle-plugin:$maven_plugin_version"

        // https://github.com/ben-manes/gradle-versions-plugin
        // ./gradlew dependencyUpdates
        classpath "com.github.ben-manes:gradle-versions-plugin:$dependency_update_version"
    }
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url 'https://jitpack.io' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
